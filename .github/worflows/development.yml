# The Data Archive Frontend Development Workflow
name: Data Archive Frontend Development Workflow

# This workflow is triggered whenever there are new commits pushed to the development branch.
on:
  push:
    branches:
      - development

jobs:
  job1:
    # The job for building and testing the code inside the github virtual machine.
    name: Build and test the app on the github virtual machine
    # This job is executed on the Linux machine.
    runs-on: ubuntu-latest

    # The matrix strategy is used to specify the nodejs version to use for the node packages management.
    strategy:
      # In this case, nodejs version 10.x is used.
      # To include more versions, you add them as follows: [8.x, 10.x, 12.x, ...].
      matrix:
        node-version: [10.x]

    # The steps to be executed for this job.
    steps:
      # This step uses the checkout action to make sure the latest code is used.
      - name: Use the latest code
        uses: actions/checkout@v1
      # This step uses the setup-node action to setup the nodejs environment.
      - name: Setup the nodejs environment
        uses: actions/setup-node@v1
        # The setup-node action accepts parameters.
        # In this case, the nodejs version parameter specifying the version of nodejs to use is supplied.
        with:
          node-version: ${{ matrix.node-version }}
      # This specifies the commands to run after the build is done.
      # The first command is for installing the nodejs packages.
      # The second command is for typescript linting.
      # The third command is for executing the tests.
      - run: |
          yarn install
          yarn lint
          yarn test:ci
        shell: bash

  job2:
    # This job is only executed when job1 executed successfully
    needs: job1

    # The job for building, testing and deploy the code to the development server.
    name: Build, test and deploy on the development server
    # This job is executed on the Linux machine.
    runs-on: ubuntu-latest

    # The steps to be executed for this job.
    steps:
      # This step uses the checkout action to make sure the latest code is used.
      - name: Use the latest code
        uses: actions/checkout@v1
      # This step uses the fifsky ssh action to setup a ssh server used to ssh into the development server.
      - name: Fifsky ssh server
        uses: fifsky/ssh-action@master
        # The fifsky ssh action accepts parameters.
        # These parameters are secretly stored in GitHub secrete store.
        # In this case, the following parameters are supplied
        # key, the client ssh private key
        # host, the host to ssh into
        # user, the host username to ssh into
        # port, the host port to ssh into
        # command, the command to be executed inside the remote host.
        with:
          key: ${{ secrets.SSH_MACHINE_PRIVATE_SSH_KEY }}
          host: ${{ secrets.SSH_MACHINE_HOST }}
          user: ${{ secrets.SSH_MACHINE_USER }}
          port: ${{ secrets.SSH_MACHINE_PORT }}
          # The ssh action logs into a gateway server,
          # and we still have to connect to the machine on which the data archive is hosted.
          command: |
            ssh -o StrictHostKeyChecking=no -tt ${{ secrets.DEV_USER}}@${{ secrets.DEV_HOST}} -p ${{ secrets.DEV_PORT}} """
              cd /var/www/data-archive-frontend
              git checkout development
              git pull
              yarn install
              yarn lint
              yarn test:ci
              yarn build
              exit
            """
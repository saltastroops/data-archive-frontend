// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Grids  should render all grids correctly 1`] = `
.c0 {
  display: grid;
  grid-template-columns: 50% 50%;
  padding: 10px;
  gap: 20px;
}

@media (max-width:900px) {
  .c0 {
    grid-template-columns: auto;
  }
}

<styled.div>
  <StyledComponent
    forwardedComponent={
      Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [
          Object {
            "className": "grid-container",
            "disable": true,
          },
        ],
        "componentStyle": ComponentStyle {
          "componentId": "sc-htpNat",
          "isStatic": false,
          "lastClassName": "c0",
          "rules": Array [
            "
  display: grid;
  grid-template-columns: 50% 50%;
  padding: 10px;
  gap: 20px;

  @media (max-width: 900px) {
    grid-template-columns: auto;
  }
",
          ],
        },
        "displayName": "styled.div",
        "foldedComponentIds": Array [],
        "render": [Function],
        "styledComponentId": "sc-htpNat",
        "target": "div",
        "toString": [Function],
        "usesTheme": false,
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      }
    }
    forwardedRef={null}
  >
    <div
      className="c0 grid-container"
    />
  </StyledComponent>
</styled.div>
`;

exports[`Grids  should render all grids correctly 2`] = `
.c0 {
  background-color: #f6f7e1;
  border: 1px solid rgba(246,247,225,0.5);
  text-align: center;
}

<styled.div>
  <StyledComponent
    forwardedComponent={
      Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [
          Object {
            "className": "grid-item target-form",
          },
        ],
        "componentStyle": ComponentStyle {
          "componentId": "sc-ifAKCX",
          "isStatic": false,
          "lastClassName": "c0",
          "rules": Array [
            "
  background-color: #f6f7e1;
  border: 1px solid rgba(246, 247, 225, 0.5);
  text-align: center;
",
          ],
        },
        "displayName": "styled.div",
        "foldedComponentIds": Array [],
        "render": [Function],
        "styledComponentId": "sc-ifAKCX",
        "target": "div",
        "toString": [Function],
        "usesTheme": false,
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      }
    }
    forwardedRef={null}
  >
    <div
      className="c0 grid-item target-form"
    />
  </StyledComponent>
</styled.div>
`;

exports[`Grids  should render all grids correctly 3`] = `
.c0 {
  background-color: #f2fffb;
  border: 1px solid rgba(242,255,251,0.5);
  text-align: center;
}

<styled.div>
  <StyledComponent
    forwardedComponent={
      Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [
          Object {
            "className": "grid-item proposal-form",
          },
        ],
        "componentStyle": ComponentStyle {
          "componentId": "sc-EHOje",
          "isStatic": false,
          "lastClassName": "c0",
          "rules": Array [
            "
  background-color: #f2fffb;
  border: 1px solid rgba(242, 255, 251, 0.5);
  text-align: center;
",
          ],
        },
        "displayName": "styled.div",
        "foldedComponentIds": Array [],
        "render": [Function],
        "styledComponentId": "sc-EHOje",
        "target": "div",
        "toString": [Function],
        "usesTheme": false,
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      }
    }
    forwardedRef={null}
  >
    <div
      className="c0 grid-item proposal-form"
    />
  </StyledComponent>
</styled.div>
`;

exports[`Grids  should render all grids correctly 4`] = `
.c0 {
  background-color: #e0edf9;
  border: 1px solid rgba(224,237,249,0.5);
  text-align: center;
}

<styled.div>
  <StyledComponent
    forwardedComponent={
      Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [
          Object {
            "className": "grid-item data-form",
          },
        ],
        "componentStyle": ComponentStyle {
          "componentId": "sc-bZQynM",
          "isStatic": false,
          "lastClassName": "c0",
          "rules": Array [
            "
  background-color: #e0edf9;
  border: 1px solid rgba(224, 237, 249, 0.5);
  text-align: center;
",
          ],
        },
        "displayName": "styled.div",
        "foldedComponentIds": Array [],
        "render": [Function],
        "styledComponentId": "sc-bZQynM",
        "target": "div",
        "toString": [Function],
        "usesTheme": false,
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      }
    }
    forwardedRef={null}
  >
    <div
      className="c0 grid-item data-form"
    />
  </StyledComponent>
</styled.div>
`;

exports[`Grids  should render all grids correctly 5`] = `
.c0 {
  background-color: #fff4fa;
  border: 1px solid rgba(255,244,250,0.5);
  text-align: center;
}

<styled.div>
  <StyledComponent
    forwardedComponent={
      Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [
          Object {
            "className": "grid-item telescope-form",
          },
        ],
        "componentStyle": ComponentStyle {
          "componentId": "sc-htoDjs",
          "isStatic": false,
          "lastClassName": "c0",
          "rules": Array [
            "
  background-color: #fff4fa;
  border: 1px solid rgba(255, 244, 250, 0.5);
  text-align: center;
",
          ],
        },
        "displayName": "styled.div",
        "foldedComponentIds": Array [],
        "render": [Function],
        "styledComponentId": "sc-htoDjs",
        "target": "div",
        "toString": [Function],
        "usesTheme": false,
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      }
    }
    forwardedRef={null}
  >
    <div
      className="c0 grid-item telescope-form"
    />
  </StyledComponent>
</styled.div>
`;

exports[`Grids  should render all grids correctly 6`] = `
.c0 {
  border: 1px solid rgba(255,255,255,0);
  text-align: left;
}

<styled.div>
  <StyledComponent
    forwardedComponent={
      Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [
          Object {
            "className": "grid-item",
          },
        ],
        "componentStyle": ComponentStyle {
          "componentId": "sc-gzVnrw",
          "isStatic": false,
          "lastClassName": "c0",
          "rules": Array [
            "
  border: 1px solid rgba(255, 255, 255, 0);
  text-align: left;
",
          ],
        },
        "displayName": "styled.div",
        "foldedComponentIds": Array [],
        "render": [Function],
        "styledComponentId": "sc-gzVnrw",
        "target": "div",
        "toString": [Function],
        "usesTheme": false,
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      }
    }
    forwardedRef={null}
  >
    <div
      className="c0 grid-item"
    />
  </StyledComponent>
</styled.div>
`;

exports[`Grids  should render all grids correctly 7`] = `
.c0.c0 {
  display: grid;
  grid-template-columns: 50% 50%;
  padding: 10px;
}

<styled.div>
  <StyledComponent
    forwardedComponent={
      Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [
          Object {
            "className": "main-grid",
          },
        ],
        "componentStyle": ComponentStyle {
          "componentId": "sc-dnqmqq",
          "isStatic": false,
          "lastClassName": "c0",
          "rules": Array [
            "
  && {
    display: grid;
    grid-template-columns: 50% 50%;
    padding: 10px;
  }
",
          ],
        },
        "displayName": "styled.div",
        "foldedComponentIds": Array [],
        "render": [Function],
        "styledComponentId": "sc-dnqmqq",
        "target": "div",
        "toString": [Function],
        "usesTheme": false,
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      }
    }
    forwardedRef={null}
  >
    <div
      className="c0 main-grid"
    />
  </StyledComponent>
</styled.div>
`;

exports[`Grids  should render all grids correctly 8`] = `
.c0.c0 {
  text-align: left;
  padding-left: 10px;
}

<styled.div>
  <StyledComponent
    forwardedComponent={
      Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [
          Object {
            "className": "sub-grid",
          },
        ],
        "componentStyle": ComponentStyle {
          "componentId": "sc-VigVT",
          "isStatic": false,
          "lastClassName": "c0",
          "rules": Array [
            "
  && {
    text-align: left;
    padding-left: 10px;
  }
",
          ],
        },
        "displayName": "styled.div",
        "foldedComponentIds": Array [],
        "render": [Function],
        "styledComponentId": "sc-VigVT",
        "target": "div",
        "toString": [Function],
        "usesTheme": false,
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      }
    }
    forwardedRef={null}
  >
    <div
      className="c0 sub-grid"
    />
  </StyledComponent>
</styled.div>
`;

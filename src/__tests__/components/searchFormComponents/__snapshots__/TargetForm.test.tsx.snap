// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`TargetForm should render correctly 1`] = `
<Fragment>
  <styled.div>
    <styled.div>
      <styled.div>
        <p>
          Target name 
        </p>
        <HelpButton
          left={true}
          toolTipMessage="Target name. This is used to determine the target position to search for. It must be possible to resolve the name with the chosen resolver."
        />
      </styled.div>
      <InputField
        data-test="target-name-input"
        disabled={false}
        name="name"
        onChange={[Function]}
        value=""
      />
    </styled.div>
    <styled.div>
      <styled.div>
        <p>
          Resolver
        </p>
        <HelpButton
          left={true}
          toolTipMessage="Resolver for resolving the target name to a target position."
        />
      </styled.div>
      <ResolverContainer>
        <SelectField
          data-test="resolver-select"
          name="resolver"
          onChange={[Function]}
          value="Simbad"
        >
          <option
            value="Simbad"
          >
            Simbad
          </option>
          <option
            value="NED"
          >
            NED
          </option>
          <option
            value="VizieR"
          >
            VizieR
          </option>
        </SelectField>
        <button
          className="button is-info false"
          disabled={false}
          onClick={[Function]}
          title=""
          type="button"
        >
          resolve
        </button>
      </ResolverContainer>
    </styled.div>
  </styled.div>
  <styled.div>
    <styled.div>
      <styled.div>
        <p>
          Right ascension
        </p>
        <HelpButton
          left={true}
          toolTipMessage="   Right ascension, either as decimal degrees or as a sexagesimal value. You can input a range by separating two right ascensions with \\"..\\". For example: 11 .. 14."
        />
      </styled.div>
      <InputField
        data-test="right-ascension-input"
        disabled={false}
        name="rightAscension"
        onChange={[Function]}
        value=""
      />
    </styled.div>
    <styled.div>
      <styled.div>
        <p>
          Declination
        </p>
        <HelpButton
          left={true}
          toolTipMessage="Declination, either as decimal degrees or as a sexagesimal value. You can input a range by separating two declinations with \\"..\\". For example: -57 .. -51\`."
        />
      </styled.div>
      <InputField
        data-test="declination-input"
        disabled={false}
        name="declination"
        onChange={[Function]}
        value=""
      />
    </styled.div>
  </styled.div>
  <styled.div>
    <styled.div>
      <styled.div>
        <p>
          Search radius
        </p>
        <HelpButton
          left={true}
          toolTipMessage=" Radius of the search cone in the selected units."
        />
      </styled.div>
      <InputField
        data-test="search-cone-radius-input"
        name="searchConeRadius"
        onChange={[Function]}
        value=""
      />
    </styled.div>
    <styled.div>
      <p>
        Radius units
      </p>
      <SelectField
        data-test="radius-units-select"
        name="searchConeRadiusUnits"
        onChange={[Function]}
        title="Units of the search cone radius"
        value="arcseconds"
      >
        <option
          value="arcseconds"
        >
          Arcseconds
        </option>
        <option
          value="arcminutes"
        >
          Arcminutes
        </option>
        <option
          value="degrees"
        >
          Degrees
        </option>
      </SelectField>
    </styled.div>
  </styled.div>
  <styled.div>
    <styled.div>
      <p>
        Target type
      </p>
      <TargetTypesSelector
        onChange={[Function]}
        targetTypes={Set {}}
      />
    </styled.div>
  </styled.div>
  <styled.div>
    <styled.div />
  </styled.div>
</Fragment>
`;

exports[`TargetForm should render correctly 2`] = `
<Fragment>
  <styled.div>
    <styled.div>
      <styled.div>
        <p>
          Target name 
        </p>
        <HelpButton
          left={true}
          toolTipMessage="Target name. This is used to determine the target position to search for. It must be possible to resolve the name with the chosen resolver."
        />
      </styled.div>
      <InputField
        data-test="target-name-input"
        disabled={false}
        name="name"
        onChange={[Function]}
        value="NGC 1234"
      />
    </styled.div>
    <styled.div>
      <styled.div>
        <p>
          Resolver
        </p>
        <HelpButton
          left={true}
          toolTipMessage="Resolver for resolving the target name to a target position."
        />
      </styled.div>
      <ResolverContainer>
        <SelectField
          data-test="resolver-select"
          name="resolver"
          onChange={[Function]}
          value="Simbad"
        >
          <option
            value="Simbad"
          >
            Simbad
          </option>
          <option
            value="NED"
          >
            NED
          </option>
          <option
            value="VizieR"
          >
            VizieR
          </option>
        </SelectField>
        <button
          className="button is-info false"
          disabled={false}
          onClick={[Function]}
          title=""
          type="button"
        >
          resolve
        </button>
      </ResolverContainer>
    </styled.div>
  </styled.div>
  <styled.div>
    <styled.div>
      <styled.div>
        <p>
          Right ascension
        </p>
        <HelpButton
          left={true}
          toolTipMessage="   Right ascension, either as decimal degrees or as a sexagesimal value. You can input a range by separating two right ascensions with \\"..\\". For example: 11 .. 14."
        />
      </styled.div>
      <InputField
        data-test="right-ascension-input"
        disabled={false}
        name="rightAscension"
        onChange={[Function]}
        value=""
      />
    </styled.div>
    <styled.div>
      <styled.div>
        <p>
          Declination
        </p>
        <HelpButton
          left={true}
          toolTipMessage="Declination, either as decimal degrees or as a sexagesimal value. You can input a range by separating two declinations with \\"..\\". For example: -57 .. -51\`."
        />
      </styled.div>
      <InputField
        data-test="declination-input"
        disabled={false}
        name="declination"
        onChange={[Function]}
        value=""
      />
    </styled.div>
  </styled.div>
  <styled.div>
    <styled.div>
      <styled.div>
        <p>
          Search radius
        </p>
        <HelpButton
          left={true}
          toolTipMessage=" Radius of the search cone in the selected units."
        />
      </styled.div>
      <InputField
        data-test="search-cone-radius-input"
        name="searchConeRadius"
        onChange={[Function]}
        value=""
      />
    </styled.div>
    <styled.div>
      <p>
        Radius units
      </p>
      <SelectField
        data-test="radius-units-select"
        name="searchConeRadiusUnits"
        onChange={[Function]}
        title="Units of the search cone radius"
        value="arcseconds"
      >
        <option
          value="arcseconds"
        >
          Arcseconds
        </option>
        <option
          value="arcminutes"
        >
          Arcminutes
        </option>
        <option
          value="degrees"
        >
          Degrees
        </option>
      </SelectField>
    </styled.div>
  </styled.div>
  <styled.div>
    <styled.div>
      <p>
        Target type
      </p>
      <TargetTypesSelector
        onChange={[Function]}
        targetTypes={Set {}}
      />
    </styled.div>
  </styled.div>
  <styled.div>
    <styled.div />
  </styled.div>
</Fragment>
`;

exports[`TargetForm should render correctly 3`] = `
<Fragment>
  <styled.div>
    <styled.div>
      <styled.div>
        <p>
          Target name 
        </p>
        <HelpButton
          left={true}
          toolTipMessage="Target name. This is used to determine the target position to search for. It must be possible to resolve the name with the chosen resolver."
        />
      </styled.div>
      <InputField
        data-test="target-name-input"
        disabled={false}
        error="this is an error"
        name="name"
        onChange={[Function]}
        value=""
      />
    </styled.div>
    <styled.div>
      <styled.div>
        <p>
          Resolver
        </p>
        <HelpButton
          left={true}
          toolTipMessage="Resolver for resolving the target name to a target position."
        />
      </styled.div>
      <ResolverContainer>
        <SelectField
          data-test="resolver-select"
          name="resolver"
          onChange={[Function]}
          value="Simbad"
        >
          <option
            value="Simbad"
          >
            Simbad
          </option>
          <option
            value="NED"
          >
            NED
          </option>
          <option
            value="VizieR"
          >
            VizieR
          </option>
        </SelectField>
        <button
          className="button is-info false"
          disabled={false}
          onClick={[Function]}
          title=""
          type="button"
        >
          resolve
        </button>
      </ResolverContainer>
    </styled.div>
  </styled.div>
  <styled.div>
    <styled.div>
      <styled.div>
        <p>
          Right ascension
        </p>
        <HelpButton
          left={true}
          toolTipMessage="   Right ascension, either as decimal degrees or as a sexagesimal value. You can input a range by separating two right ascensions with \\"..\\". For example: 11 .. 14."
        />
      </styled.div>
      <InputField
        data-test="right-ascension-input"
        disabled={false}
        name="rightAscension"
        onChange={[Function]}
        value=""
      />
    </styled.div>
    <styled.div>
      <styled.div>
        <p>
          Declination
        </p>
        <HelpButton
          left={true}
          toolTipMessage="Declination, either as decimal degrees or as a sexagesimal value. You can input a range by separating two declinations with \\"..\\". For example: -57 .. -51\`."
        />
      </styled.div>
      <InputField
        data-test="declination-input"
        disabled={false}
        name="declination"
        onChange={[Function]}
        value=""
      />
    </styled.div>
  </styled.div>
  <styled.div>
    <styled.div>
      <styled.div>
        <p>
          Search radius
        </p>
        <HelpButton
          left={true}
          toolTipMessage=" Radius of the search cone in the selected units."
        />
      </styled.div>
      <InputField
        data-test="search-cone-radius-input"
        name="searchConeRadius"
        onChange={[Function]}
        value="12.1"
      />
    </styled.div>
    <styled.div>
      <p>
        Radius units
      </p>
      <SelectField
        data-test="radius-units-select"
        name="searchConeRadiusUnits"
        onChange={[Function]}
        title="Units of the search cone radius"
        value="arcminutes"
      >
        <option
          value="arcseconds"
        >
          Arcseconds
        </option>
        <option
          value="arcminutes"
        >
          Arcminutes
        </option>
        <option
          value="degrees"
        >
          Degrees
        </option>
      </SelectField>
    </styled.div>
  </styled.div>
  <styled.div>
    <styled.div>
      <p>
        Target type
      </p>
      <TargetTypesSelector
        onChange={[Function]}
        targetTypes={Set {}}
      />
    </styled.div>
  </styled.div>
  <styled.div>
    <styled.div />
  </styled.div>
</Fragment>
`;
